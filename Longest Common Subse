#User function Template for python3

class Solution:
    
    #Function to find the length of longest common subsequence in two strings.
    def lcs(self,x,y,s1,s2):
        dp =[[0 for i in range(y+1)] for i in range(x+1)]
        for i in range(1,x+1):
            for j in range(1,y+1):
                if (s1[i-1] == s2[j-1]):
                    dp[i][j] = 1 + dp[i-1][j-1]
                else:
                    dp[i][j] = max(dp[i-1][j] ,dp[i][j-1])
        return dp[-1][-1]
        
        
    #     return self.f(x,y,s1,s2,dp)
        
    
    # def f(self,x,y,s1,s2,dp):        
    #     if (x == 0 or y == 0):
    #         return 0
    #     if (dp[y][x]  != -1):    
    #         return dp[y][x]
    #     if (s1[x-1] == s2[y-1]):
    #         dp[y][x] =  1 + self.f(x-1,y-1,s1,s2,dp)
    #         return dp[y][x]
            
