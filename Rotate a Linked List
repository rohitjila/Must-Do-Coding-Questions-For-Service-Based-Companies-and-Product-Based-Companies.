# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def rotateRight(self, head: ListNode, k: int) -> ListNode:
        if (head is None or head.next is None or k == 0):
            return head
        
        curr=head
        count=1
        while(curr.next):
            count+=1
            curr=curr.next
            
        curr.next=head
        k=k % count
        k=count - k
        while(k != 0):
            k-=1
            curr=curr.next
            
        head=curr.next
        curr.next=None
        
        return head
            
