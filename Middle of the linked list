# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def middleNode(self, head: ListNode) -> ListNode:
        slow=head
        fast=head
        while(fast != None and fast.next != None):
            slow=slow.next
            fast=fast.next.next
        return slow
            
        count=0
        curr=head
        while(curr):
            count+=1
            curr=curr.next
        mid=count//2+1
        if (mid % 2 == 0):
            curr1=head
            while(mid != 1):
                mid-=1
                curr1=curr1.next
            return curr1
        else:
            curr1=head
            while(mid != 1):
                mid-=1
                curr1=curr1.next
            return curr1
