# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseKGroup(self, head: Optional[ListNode], k: int) -> Optional[ListNode]:
        if (head == None or k == 1):
            return head
        dummy=ListNode(0)
        dummy.next=head
        count=0
        curr=dummy
        pre=dummy
        nex=dummy
        while(curr.next != None):
            curr=curr.next
            count+=1
            
        while(count >= k):
            curr=pre.next
            nex=curr.next
            for i in range(1,k):
                curr.next=nex.next
                nex.next=pre.next
                pre.next=nex
                nex=curr.next
                
            pre=curr
            count-=k
        return dummy.next
